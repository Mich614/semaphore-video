- name: Simulate VM Creation
  hosts: localhost
  gather_facts: false
  vars:
    vm_name: "AnsibleDeployedMachine10Test1"
    user_data_path: "/home/gruppe2/AnsibleDeployments/user-data"
    meta_data_path: "/home/gruppe2/AnsibleDeployments/meta-data"
    iso_path: "/home/gruppe2/AnsibleDeployments/cloud-init.iso"
    esxi_iso_path: "/vmfs/volumes/DataStore/Ansible/Cloud/cloud-init.iso"

  tasks:
    - name: Generate meta-data file dynamically
      copy:
        dest: "{{ meta_data_path }}"
        content: |
          instance-id: "{{ vm_name }}"
          local-hostname: "{{ vm_name }}"

    - name: Create Cloud-Init ISO
      ansible.builtin.command:
        cmd: >
          genisoimage -output "{{ iso_path }}"
          -volid cidata -joliet -rock
          "{{ user_data_path }}" "{{ meta_data_path }}"

    - name: Verify if the ESXi directory exists
      ansible.builtin.command:
        cmd: >
          sshpass -p "Datait2024!" ssh -o StrictHostKeyChecking=no root@192.168.20.10
          "test -d /vmfs/volumes/DataStore/Ansible/Cloud"
      register: directory_check
      failed_when: directory_check.rc != 0
      ignore_errors: false

    - name: Transfer Cloud-Init ISO to ESXi server
      ansible.builtin.command:
        cmd: >
          sshpass -p "Datait2024!" scp -o StrictHostKeyChecking=no
          "{{ iso_path }}" root@192.168.20.10:"{{ esxi_iso_path }}"
      register: transfer_result
      failed_when: transfer_result.rc != 0

    - name: Verify Cloud-Init ISO on ESXi server
      ansible.builtin.command:
        cmd: >
          sshpass -p "Datait2024!" ssh -o StrictHostKeyChecking=no root@192.168.20.10
          "ls -l {{ esxi_iso_path }}"
      register: verification_result

    - name: Display verification result
      ansible.builtin.debug:
        var: verification_result.stdout
