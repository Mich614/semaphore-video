- name: Create a new Ubuntu VM from an ISO
  hosts: localhost
  gather_facts: false
  vars:
    # ESXi Server Details
    esxi_host: "192.168.20.10"
    esxi_user: "root"
    esxi_password: "Datait2024!"
    datastore_name: "DataStore"
    iso_datastore: "DataStore"
    iso_path: "ISO/ubuntu-24.04.1-live-server-amd64.iso"
    vm_name: "AnsibleDeployedUbuntuServer"
    vm_network: "VM Network"
    cpu_count: 2
    memory_mb: 2048
    disk_size_gb: 30

    # VM Networking Configuration
    dns_servers:
      - "192.168.20.20"
    default_gateway: "192.168.20.1"
    ip_address: "192.168.20.70"
    netmask: "255.255.255.0"

    # User Configuration
    new_user: "gruppe2"
    new_user_password: "Datait2024!"
    ssh_public_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL98M2+kLBp51ETKtGhoDXS6JXphaQQ5UMO0C5JL+7NU gruppe2@sephamore"  # Replace with your SSH public key

  tasks:
    - name: Create a new VM
      community.vmware.vmware_guest:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        name: "{{ vm_name }}"
        state: present
        guest_id: ubuntu64Guest
        hardware:
          memory_mb: "{{ memory_mb }}"
          num_cpus: "{{ cpu_count }}"
          scsi: paravirtual
        disks:
          - size_gb: "{{ disk_size_gb }}"
            type: thin
            datastore: "{{ datastore_name }}"
        networks:
          - name: "{{ vm_network }}"
            type: vmxnet3
        cdrom:
          type: iso
          datastore: "{{ iso_datastore }}"
          path: "{{ iso_path }}"
        customization: {}
      delegate_to: localhost

    - name: Power on the VM
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        name: "{{ vm_name }}"
        state: poweredon
      delegate_to: localhost

    - name: Wait for the VM to become reachable
      ansible.builtin.wait_for:
        host: "{{ ip_address }}"
        port: 22
        timeout: 300
      delegate_to: localhost

    - name: Add new sudoer user
      ansible.builtin.user:
        name: "{{ new_user }}"
        password: "{{ new_user_password | password_hash('sha512') }}"
        groups: sudo
        shell: /bin/bash
      when: ansible_facts['os_family'] == 'Debian'

    - name: Create .ssh directory for the new user
      ansible.builtin.file:
        path: "/home/{{ new_user }}/.ssh"
        state: directory
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: 0700

    - name: Add SSH public key to the new user
      ansible.builtin.copy:
        content: "{{ ssh_public_key }}"
        dest: "/home/{{ new_user }}/.ssh/authorized_keys"
        owner: "{{ new_user }}"
        group: "{{ new_user }}"
        mode: 0600

    - name: Ensure the user has sudo privileges without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: "{{ new_user }} ALL=(ALL) NOPASSWD:ALL"
        validate: 'visudo -cf %s'
